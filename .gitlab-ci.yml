image: tico/builder

variables:
    HOST_STAGING: root@example.com
    APP_DIR: /root/app
    IMAGE_APP: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    IMAGE_APP_VERSION: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
    DOCKER_DRIVER: overlay
    COMMAND_UPGRADE: "docker-compose stop app && docker-compose rm -f && docker-compose up --remove-orphans -d"

services:
    - docker:dind

stages:
    - test
    - build
    - deploy

job_test_codestyle:
    stage: test
    script:
      - php-cs-fixer fix --dry-run --diff
    tags:
      - docker

job_build:
    stage: build
    only:
        - master
        - develop
    before_script:
        - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    script:
        - composer-update
        - docker build -t $IMAGE_APP .
        - docker tag $IMAGE_APP $IMAGE_APP_VERSION
        - docker push $IMAGE_APP
        - docker push $IMAGE_APP_VERSION
    tags:
        - docker

job_deploy_staging:
    stage: deploy
    only:
        - develop
    environment:
      name: qa
      url: http://qa.example.com
    script:
        - ssh $HOST_STAGING docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
        - ssh $HOST_STAGING docker pull $IMAGE_APP
        - scp docker-compose-qa.yml $HOST_STAGING:$APP_DIR/docker-compose.yml
        - 'ssh $HOST_STAGING "cd $APP_DIR; $COMMAND_UPGRADE"'

job_deploy_producion:
    stage: deploy
    only:
        - master
    environment:
      name: production
      url: http://example.com
    script:
        - sed -i "s/PIPELINE_ID/${CI_PIPELINE_ID}/g" deploy.yml
        - sleep 10
        - kubectl -s 127.0.0.1:8001 apply -f deploy.yml
